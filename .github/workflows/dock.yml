name: Docker License Scan

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  license-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Install Trivy and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.47.0

      - name: Scan image and process results
        id: scan
        run: |
          TRIVY_JSON=$(trivy image --scanners license --format json alpine/openssl:latest)
          echo "$TRIVY_JSON" > trivy-results.json
          
          LICENSE_COUNT=$(echo "$TRIVY_JSON" | jq -r '.Results[0].Licenses | length')
          
          if [ "$LICENSE_COUNT" -gt 0 ]; then
            echo "::error::Found $LICENSE_COUNT licenses:"
            echo "$TRIVY_JSON" | jq -r '.Results[0].Licenses[].Name' | while read license; do
              echo " - $license"
            done
            exit 1
          else
            echo "No licenses found"
          fi

      - name: Generate report
        if: always()
        run: |
          echo "=== License Scan Report ===" > report.txt
          echo "Image: alpine/openssl:latest" >> report.txt
          echo "Date: $(date)" >> report.txt
          
          if [ -f trivy-results.json ]; then
            echo "Licenses found:" >> report.txt
            jq -r '.Results[0].Licenses[].Name' trivy-results.json >> report.txt
            echo "" >> report.txt
            echo "Full report:" >> report.txt
            cat trivy-results.json | jq >> report.txt
          else
            echo "ERROR: Scan failed - no results file" >> report.txt
          fi

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: license-scan-results
          path: |
            report.txt
            trivy-results.json
